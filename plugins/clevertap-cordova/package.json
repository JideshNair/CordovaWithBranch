{
  "_args": [
    [
      {
        "raw": "https://github.com/CleverTap/clevertap-cordova.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/CleverTap/clevertap-cordova.git",
        "spec": "git+https://github.com/CleverTap/clevertap-cordova.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:CleverTap/clevertap-cordova.git",
          "sshUrl": "git+ssh://git@github.com/CleverTap/clevertap-cordova.git",
          "httpsUrl": "git+https://github.com/CleverTap/clevertap-cordova.git",
          "gitUrl": "git://github.com/CleverTap/clevertap-cordova.git",
          "shortcut": "github:CleverTap/clevertap-cordova",
          "directUrl": "https://raw.githubusercontent.com/CleverTap/clevertap-cordova/master/package.json"
        }
      },
      "/Users/jidesh/Desktop/cordovaprojects"
    ]
  ],
  "_from": "git+https://github.com/CleverTap/clevertap-cordova.git",
  "_id": "clevertap-cordova@2.2.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/clevertap-cordova",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/CleverTap/clevertap-cordova.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/CleverTap/clevertap-cordova.git",
    "spec": "git+https://github.com/CleverTap/clevertap-cordova.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:CleverTap/clevertap-cordova.git",
      "sshUrl": "git+ssh://git@github.com/CleverTap/clevertap-cordova.git",
      "httpsUrl": "git+https://github.com/CleverTap/clevertap-cordova.git",
      "gitUrl": "git://github.com/CleverTap/clevertap-cordova.git",
      "shortcut": "github:CleverTap/clevertap-cordova",
      "directUrl": "https://raw.githubusercontent.com/CleverTap/clevertap-cordova/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+https://github.com/CleverTap/clevertap-cordova.git#06eda62c9c47d11146747de77bb8ebb828f1655e",
  "_shasum": "d718395ae3beae17051a87eb12cdb24bf6831aaa",
  "_shrinkwrap": null,
  "_spec": "https://github.com/CleverTap/clevertap-cordova.git",
  "_where": "/Users/jidesh/Desktop/cordovaprojects",
  "author": {
    "name": "CleverTap"
  },
  "bugs": {
    "url": "https://github.com/CleverTap/clevertap-cordova/issues"
  },
  "cordova": {
    "id": "clevertap-cordova",
    "platforms": [
      "ios",
      "android"
    ]
  },
  "dependencies": {},
  "description": "CleverTap Plugin for Cordova/PhoneGap",
  "devDependencies": {},
  "engines": [
    {
      "name": "cordova",
      "version": ">=3.0.0"
    }
  ],
  "gitHead": "06eda62c9c47d11146747de77bb8ebb828f1655e",
  "homepage": "https://github.com/CleverTap/clevertap-cordova#readme",
  "keywords": [
    "CleverTap",
    "ecosystem:cordova",
    "cordova-ios",
    "cordova-android"
  ],
  "license": "Commercial",
  "name": "clevertap-cordova",
  "optionalDependencies": {},
  "readme": "CleverTap Cordova Plugin\n========\n[![npm version](https://badge.fury.io/js/clevertap-cordova.svg)](https://badge.fury.io/js/clevertap-cordova)\n\n## Supported Versions\n\nTested on Cordova 9.0.0\n\n- [CleverTap Android SDK version 3.8.0](https://github.com/CleverTap/clevertap-android-sdk/releases/tag/3.8.0)\n- [CleverTap iOS SDK version 3.8.0](https://github.com/CleverTap/clevertap-ios-sdk/releases/tag/3.8.0)\n\n## Install\n\nTo integrate CleverTap for Cordova:\n\n1. Sign up\n\n2. Set up and register for Push notifications, if required.\n\n3. Integrate your Javascript with the CleverTap Plugin.\n\n### 1. Sign up\n\n[Sign up](http://www.clevertap.com/sign-up/) for a free account.  \n\nWhen you create your CleverTap account, you will also automatically get a -Test account.  Use the -Test account for development and the main account for production.\n\n### Install the Plugin\n\nGrab the Account ID and Token values from your CleverTap [Dashboard](https://dashboard.clevertap.com) -> Settings.\n\n#### For Android *Important*\nStarting with v2.0.0, the plugin uses FCM rather than GCM.  To configure FCM, add your google-services.json to the root of your cordova project **before you add the plugin**.  \nThe plugin uses an `after plugin add` hook script to configure your project for FCM.  \nIf the google-services.json file is not present in your project when the script runs, FCM will not be configured properly and will not work.\n\n#### Using Cordova  \n\n```\ncordova plugin add https://github.com/CleverTap/clevertap-cordova.git --variable CLEVERTAP_ACCOUNT_ID=\"YOUR CLEVERTAP ACCOUNT ID\" --variable CLEVERTAP_TOKEN=\"YOUR CELVERTAP ACCOUNT TOKEN\"\n```\n\n#### Using Ionic  \n\n```\nionic cordova plugin add clevertap-cordova@latest --variable CLEVERTAP_ACCOUNT_ID=\"YOUR CLEVERTAP ACCOUNT ID\" --variable CLEVERTAP_TOKEN=\"YOUR CELVERTAP ACCOUNT TOKEN\"\n```\n\n##### For Ionic3\n```\nnpm install @ionic-native/clevertap --save \n```\n- [see the included Ionic3 Example project for usage](https://github.com/CleverTap/clevertap-cordova/blob/master/Ionic3Example/src/app/app.component.ts).\n\n- be sure to [add CleverTap as a provider in your app module](https://github.com/CleverTap/clevertap-cordova/blob/master/Ionic3Example/src/app/app.module.ts). \n```\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen, clevertap: CleverTap) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n\n      ...\n      clevertap.setDebugLevel(2);\n      clevertap.profileGetCleverTapID((id) => {console.log(id)});\n      ...\n    });\n  }\n}\n\n```\n\n#### Using PhoneGap Build\n\n**Starting with v2.0.0, the plugin drops official support for PhoneGap Build.**\nThis is because PhoneGap Build does not support install hooks and a hook is required to configure FCM.\nIt might be possible by forking this plugin and replacing the placeholder google-services.json in src/android with yours, and then hard coding your google app id and api key in plugin.xml, but you're on your own there.\n\nWhen using the plugin with PhoneGap Build:\n\nAdd the following to your `www/config.xml` file:\n\n```\n<preference name=\"android-build-tool\" value=\"gradle\" />\n\n<gap:plugin name=\"clevertap-cordova\" source=\"npm\">\n    <param name=\"CLEVERTAP_ACCOUNT_ID\" value=\"YOUR CLEVERTAP ACCOUNT ID\" />\n    <param name=\"CLEVERTAP_TOKEN\" value=\"YOUR CLEVERTAP ACCOUNT TOKEN\" />\n    <param name=\"GCM_PROJECT_NUMBER\" value=\"YOUR GCM PROJECT NUMBER\" /> // for v1.2.5 and lower of the plugin\n</gap:plugin>\n```            \n\n*For PhoneGap Build Android projects*:  **Extremely Important**:  add `CleverTap.notifyDeviceReady();` to your onDeviceReady callback in `www/js/index.js`:\n\n```\nonDeviceReady: function() {\n    app.receivedEvent('deviceready');\n    CleverTap.notifyDeviceReady();\n    ...\n},\n```\n\n#### Android\n\nCheck that the following is inside the `<application></application>` tags of your AndroidManifest.xml:  \n\n    <meta-data  \n        android:name=\"CLEVERTAP_ACCOUNT_ID\"  \n        android:value=\"Your CleverTap Account ID\"/>  \n    <meta-data  \n        android:name=\"CLEVERTAP_TOKEN\"  \n        android:value=\"Your CleverTap Account Token\"/>\n\nReplace \"Your CleverTap Account ID\" and \"Your CleverTap Account Token\" with actual values from your CleverTap [Dashboard](https://dashboard.clevertap.com) -> Settings.\n\n**Set the Lifecycle Callback**\n\nIMPORTANT!\n\nCheck the `android:name` property of the `<application>` tag of our AndroidManifest.xml:\n\n    <application\n        android:name=\"com.clevertap.android.sdk.Application\">\n\n**Note:** The above step is **extremely important** and enables CleverTap to track notification opens, display in-app notifications, track deep links, and other important **user behaviour**.\n\n**Add Permissions**\n\nPlease ensure that you're requesting the following permissions for your app:\n\n    <!-- Required to allow the app to send events -->\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\n    <!-- Recommended so that we can be smart about when to send the data -->\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/>\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\n\n[Please see the example AndroidManifest.xml here](https://github.com/CleverTap/clevertap-cordova/blob/master/ExampleProject/platforms/android/app/src/main/AndroidManifest.xml).\n\n**Add Dependencies**\n\nMake sure your build.gradle file includes the play-services and support library dependencies:\n\n    dependencies {\n        implementation fileTree(dir: 'libs', include: '*.jar'  )\n        debugCompile(project(path: \"CordovaLib\", configuration: \"debug\"))\n        releaseCompile(project(path: \"CordovaLib\", configuration: \"release\"))\n        // SUB-PROJECT DEPENDENCIES START\n        implementation \"com.google.firebase:firebase-core:+\"\n        implementation \"com.google.firebase:firebase-messaging:17.3.3\"\n        implementation \"com.android.support:support-v4:+\"\n        implementation \"com.android.installreferrer:installreferrer:1.0\" //Mandatory for v2.1.8 and above\n        // SUB-PROJECT DEPENDENCIES END   \n\n### 2. Set up and register for push notifications and deep links\n\n#### iOS\n\n[Set up push notifications for your app](https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/AppDistributionGuide/AddingCapabilities/AddingCapabilities.html#//apple_ref/doc/uid/TP40012582-CH26-SW6).\n\nIf you plan on using deep links, [please register your custom url scheme as described here](https://developer.apple.com/library/ios/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/Inter-AppCommunication/Inter-AppCommunication.html#//apple_ref/doc/uid/TP40007072-CH6-SW1).\n\nCall the following from your Javascript.\n\n    CleverTap.registerPush();\n\n\n#### Android\n\nThe `FCMTokenListenerService` of the CleverTap Android SDK registers push tokens automatically. No action is required from the Javascript side. Hence, Android does not require the `CleverTap.registerPush()` method.\n\nAdd your custom url scheme to the AndroidManifest.xml.\n\n\t <intent-filter android:label=\"@string/app_name\">\n                <action android:name=\"android.intent.action.VIEW\" />\n                <category android:name=\"android.intent.category.DEFAULT\" />\n                <category android:name=\"android.intent.category.BROWSABLE\" />\n                <data android:scheme=\"clevertapstarter\" />\n     </intent-filter>\n\n\nSee [example AndroidManifest.xml](ihttps://github.com/CleverTap/clevertap-cordova/blob/master/ExampleProject/platforms/android/app/src/main/AndroidManifest.xml).\n\n### 3. Integrate Javascript with the Plugin\n\nAfter integrating, all calls to the CleverTap SDK should be made from your Javascript.\n\nStart by adding the following listeners to your Javascript:\n\n    document.addEventListener('deviceready', this.onDeviceReady, false);\n    document.addEventListener('onCleverTapProfileSync', this.onCleverTapProfileSync, false); // optional: to be notified of CleverTap user profile synchronization updates\n    document.addEventListener('onCleverTapProfileDidInitialize', this.onCleverTapProfileDidInitialize, false); // optional, to be notified when the CleverTap user profile is initialized\n    document.addEventListener('onCleverTapInAppNotificationDismissed', this.onCleverTapInAppNotificationDismissed, false); // optional, to be receive a callback with custom in-app notification click data\n    document.addEventListener('onDeepLink', this.onDeepLink, false); // optional, register to receive deep links.\n    document.addEventListener('onPushNotification', this.onPushNotification, false); // optional, register to receive push notification payloads.\n    document.addEventListener('onCleverTapInboxDidInitialize', this.onCleverTapInboxDidInitialize, false); // optional, to check if CleverTap Inbox intialized\n    document.addEventListener('onCleverTapInboxMessagesDidUpdate', this.onCleverTapInboxMessagesDidUpdate, false); // optional, to check if CleverTap Inbox Messages were updated\n    document.addEventListener('onCleverTapInboxButtonClick', this.onCleverTapInboxButtonClick, false); // optional, to check if Inbox button was clicked with custom payload\n    document.addEventListener('onCleverTapInAppButtonClick', this.onCleverTapInAppButtonClick, false); // optional, to check if InApp button was clicked with custom payload\n    document.addEventListener('onCleverTapFeatureFlagsDidUpdate', this.onCleverTapFeatureFlagsDidUpdate, false); // optional, to check if Feature Flags were updated\n    document.addEventListener('onCleverTapProductConfigDidInitialize', this.onCleverTapProductConfigDidInitialize, false); // optional, to check if Product Config was initialized\n    document.addEventListener('onCleverTapProductConfigDidFetch', this.onCleverTapProductConfigDidFetch, false); // optional, to check if Product Configs were updated\n    document.addEventListener('onCleverTapProductConfigDidActivate', this.onCleverTapProductConfigDidActivate, false); // optional, to check if Product Configs were activated\n    document.addEventListener('onCleverTapExperimentsUpdated', this.onCleverTapExperimentsUpdated, false); // optional, to check if Dynamic Variable Experiments were updated\n    document.addEventListener('onCleverTapDisplayUnitsLoaded', this.onCleverTapDisplayUnitsLoaded, false); // optional, to check if Native Display units were loaded\n\n\n    // deep link handling  \n    onDeepLink: function(e) {\n        console.log(e.deeplink);  \n    },\n\n    // push notification data handling\n    onPushNotification: function(e) {\n        console.log(JSON.stringify(e.notification));\n    },\n    onCleverTapInboxDidInitialize: function() {\n        CleverTap.showInbox({\"navBarTitle\":\"My App Inbox\",\"tabs\": [\"tag1\", \"tag2\"],\"navBarColor\":\"#FF0000\"});\n    },\n    \n    onCleverTapInboxMessagesDidUpdate: function() {\n        CleverTap.getInboxMessageUnreadCount(function(val) {console.log(\"Inbox unread message count\"+val);})\n        CleverTap.getInboxMessageCount(function(val) {console.log(\"Inbox read message count\"+val);});\n    },\n\n    onCleverTapInAppButtonClick: function(e) {\n        console.log(\"onCleverTapInAppButtonClick\");\n        console.log(e.customExtras);\n    },\n\n    onCleverTapInboxButtonClick: function(e) {\n        console.log(\"onCleverTapInboxButtonClick\");\n        console.log(e.customExtras);\n    },\n\n    onCleverTapFeatureFlagsDidUpdate: function() {\n        console.log(\"onCleverTapFeatureFlagsDidUpdate\");\n    },\n\n    onCleverTapProductConfigDidInitialize: function() {\n        console.log(\"onCleverTapProductConfigDidInitialize\");\n    },\n\n    onCleverTapProductConfigDidFetch: function() {\n        console.log(\"onCleverTapProductConfigDidFetch\");\n    },\n\n    onCleverTapProductConfigDidActivate: function() {\n        console.log(\"onCleverTapProductConfigDidActivate\");\n    },\n\n    onCleverTapExperimentsUpdated: function() {\n        console.log(\"onCleverTapExperimentsUpdated\");\n    },\n\n    onCleverTapDisplayUnitsLoaded: function(e) {\n        console.log(\"onCleverTapDisplayUnitsLoaded\");\n        console.log(e.units);\n    },\n\n\n\nThen:  \n\n- [see the included Example Cordova project for usage](https://github.com/CleverTap/clevertap-cordova/blob/master/ExampleProject/www/js/index.js).  \n\n- [see the included Ionic3 Example project for usage](https://github.com/CleverTap/clevertap-cordova/blob/master/Ionic3Example/src/app/app.component.ts).  \n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/CleverTap/clevertap-cordova.git"
  },
  "version": "2.2.0"
}
